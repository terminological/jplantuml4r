<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>io.github.terminological</groupId>
	<artifactId>jplantuml4r</artifactId>
	<version>main-SNAPSHOT</version>
	<packaging>jar</packaging>

	<!-- Enter a name here -->
	<name>jplantuml4r</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<r6.version>0.6.2-SNAPSHOT</r6.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>io.github.terminological</groupId>
			<artifactId>r6-generator-runtime</artifactId>
			<version>${r6.version}</version>
		</dependency>
		<!-- the r6-generator-runtime includes necessary dependencies on slf4j and log4j -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.plantuml</groupId>
			<artifactId>plantuml</artifactId>
			<version>1.2024.4</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>github</id>
        	<url>https://maven.pkg.github.com/terminological/m2repo</url>
		</repository>
	</repositories>

	<!-- Resolve maven plugin on Github -->
	<pluginRepositories>
		<pluginRepository>
			<id>github</id>
        	<url>https://maven.pkg.github.com/terminological/m2repo</url>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.github.terminological</groupId>
				<artifactId>r6-generator-maven-plugin</artifactId>
				<version>${r6.version}</version>
				<configuration>
					<packageData>
						<!-- R library metadata: -->
						<title>jplantuml4r: R6 Java wrapper package</title>
						<version>0.0.0.9000</version>
						<packageName>jplantuml4r</packageName>
						<license>MIT</license>
						<!-- <url>ENTER URL</url> -->
						<!-- <doi>ENTER DOI</doi> -->
						<description>
							An R6 package wrapping java code in the org.github.io.github.terminological:jplantuml4r library.
							This library was generated by the r6-generator-maven-plugin.
						</description>
						<maintainerName>Rob</maintainerName>
						<maintainerFamilyName>Challen</maintainerFamilyName>
						<maintainerEmail>rob.challen@bristol.ac.uk</maintainerEmail>
						<maintainerOrganisation>University of Bristol</maintainerOrganisation>
						<maintainerORCID>0000-0002-5504-7768</maintainerORCID>
						<githubOrganisation>terminological</githubOrganisation>
						<githubRepository>jplantuml4r</githubRepository>
						<!-- Build configuration options: -->
						<debug>false</debug> <!-- starts the R library with java code in debugging mode -->
						<rjavaOpts>
							<rjavaOpt>-Xmx256M</rjavaOpt> <!--  this example sets the maximum heap size -->
						</rjavaOpts>
						<!-- The following 2 options requires a working R version on the system that generates the R package -->
						<usePkgdown>true</usePkgdown> <!-- Pkgdown will generate a nice looking site and run all the vignettes on build -->
						<useRoxygen2>false</useRoxygen2> <!-- Roxygen can integrate user supplied and generated R code -->
						<useJavadoc>false</useJavadoc> <!-- building the javadocs into the documentation is nice but can add a lot to size of the package -->
						<!-- distribute java as fat jar. all dependencies pre-linked and embedded in distribution -->
						<!-- packaging all dependencies is the most robust but results in a large package size -->
						<preCompileBinary>true</preCompileBinary>
						<packageAllDependencies>true</packageAllDependencies>
						<!-- make the jar file smaller by using the shade plugin --> 
						<useShadePlugin>false</useShadePlugin> 
					</packageData>
					<outputDirectory>${project.basedir}/..</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<id>clean-r-library</id>
						<goals>
							<goal>clean-r-library</goal>
						</goals>
					</execution>
					<!-- This execution flattens the pom.xml to remove unnecessary dependencies -->
					<execution>
						<id>flatten-pom</id>
						<goals>
							<goal>flatten-pom</goal>
						</goals>
					</execution>
					<!-- This execution generates the supporting r code -->
					<execution>
						<id>generate-r-library</id>
						<goals>
							<goal>generate-r-library</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
