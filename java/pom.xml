<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<!-- This parent stanza can be deleted along with the pom.xml file in the root of the project -->
	<parent>
		<groupId>org.github.terminological</groupId>
		<artifactId>jplantuml4r-parent</artifactId>
		<version>main-SNAPSHOT</version>
	</parent>
	
	
	<groupId>org.github.terminological</groupId>
	<artifactId>jplantuml4r</artifactId>
	<version>main-SNAPSHOT</version>
	<packaging>jar</packaging>

	<!-- Enter a name here -->
	<name>jplantuml4r</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<r6.version>0.4.1</r6.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>io.github.terminological</groupId>
			<artifactId>r6-generator-runtime</artifactId>
			<version>${r6.version}</version>
		</dependency>
		<!-- the r6-generator-runtime includes necessary dependencies on slf4j and log4j -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.github.terminological</groupId>
				<artifactId>r6-generator-maven-plugin</artifactId>
				<version>${r6.version}</version>
				<configuration>
					<packageData>
						<!-- R library metadata: -->
						<title>jplantuml4r: R6 Java wrapper package</title>
						<version>0.0.0.9000</version>
						<packageName>jplantuml4r</packageName>
						<license>MIT</license>
						<!-- <url>ENTER URL</url> -->
						<!-- <doi>ENTER DOI</doi> -->
						<description>
							An R6 package wrapping java code in the org.github.terminological:jplantuml4r library.
							This library was generated by the r6-generator-maven-plugin.
						</description>
						<maintainerName>Anne</maintainerName>
						<maintainerFamilyName>Example</maintainerFamilyName>
						<maintainerEmail>a.n.example@example.org</maintainerEmail>
						<maintainerOrganisation>terminological</maintainerOrganisation>
						<!-- Build configuration options: -->
						<debug>false</debug> <!-- starts the R library with java code in debugging mode -->
						<rjavaOpts>
							<rjavaOpt>-Xmx256M</rjavaOpt> <!--  this example sets the maximum heap size -->
						</rjavaOpts>
						<!-- The following 2 options requires a working R version on the system that generates the R package -->
						<usePkgdown>true</usePkgdown> <!-- Pkgdown will generate a nice looking site and run all the vignettes on build -->
						<useRoxygen2>false</useRoxygen2> <!-- Roxygen can integrate user supplied and generated R code -->
						<useJavadoc>false</useJavadoc> <!-- building the javadocs into the documentation is nice but can add a lot to size of the package -->
						<preCompileBinary>true</preCompileBinary> <!-- pre-compiling the binary is probably a safer option -->
						<packageAllDependencies>true</packageAllDependencies> <!-- packaging all dependencies is the most robust but results in a large package size -->
					</packageData>
					<outputDirectory>${project.basedir}/..</outputDirectory>
				</configuration>
				<executions>
					<!-- This execution generates the supporting r code -->
					<execution>
						<id>generate-r-library</id>
						<goals>
							<goal>generate-r-library</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- flatten out parent reference in this pom.xml. The parent pom will not be part of deployment but it had to be there for the archetype to work -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>1.2.7</version>
				<configuration>
					<flattenMode>ossrh</flattenMode>
					<updatePomFile>true</updatePomFile>
				</configuration>
				<executions>
					<!-- enable flattening -->
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<!-- ensure proper cleanup -->
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
